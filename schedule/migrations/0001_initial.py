# Generated by Django 4.0.4 on 2022-06-27 22:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('project', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Travel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel', models.TextField(blank=True, max_length=250, validators=[django.core.validators.MaxLengthValidator(250)])),
                ('flight', models.TextField(blank=True, max_length=250, validators=[django.core.validators.MaxLengthValidator(250)])),
                ('car_rental', models.TextField(blank=True, max_length=250, validators=[django.core.validators.MaxLengthValidator(250)])),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(blank=True, max_length=50)),
                ('model', models.CharField(blank=True, max_length=50)),
                ('year', models.CharField(blank=True, max_length=4)),
                ('nickname', models.CharField(max_length=50)),
                ('max_passagers', models.IntegerField(default=0)),
                ('max_weight', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('scope', models.TextField(blank=True, max_length=250, validators=[django.core.validators.MaxLengthValidator(250)])),
                ('is_travel', models.BooleanField(default=False)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='project.project')),
                ('travel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='schedule.travel')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='schedule.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('isoday', models.CharField(blank=True, editable=False, max_length=8)),
                ('isoweek', models.CharField(blank=True, editable=False, max_length=8)),
                ('segments', models.ManyToManyField(blank=True, to='schedule.schedulesegment')),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_observed', models.BooleanField(default=False)),
                ('holiday', models.CharField(choices=[('New Years Day', 'New Years Day'), ('Memorial Day', 'Memorial Day'), ('Independence Day', 'Independence Day'), ('Labor Day', 'Labor Day'), ('Thanksgiving Day', 'Thanksgiving Day'), ('Friday after Thanksgiving', 'Friday after Thanksgiving'), ('Christmas Eve', 'Christmas Eve'), ('Christmas Day', 'Christmas Day'), ('Good Friday', 'Good Friday'), ('New Years Eve', 'New Years Eve')], max_length=200, null=True)),
                ('date', models.DateField(null=True)),
                ('paid_employee', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
